// <auto-generated />
using FakeBet.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace FakeBet.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FakeBet.Models.HighScore", b =>
                {
                    b.Property<long>("TickOfUpdate")
                        .ValueGeneratedOnAdd();

                    b.HasKey("TickOfUpdate");

                    b.ToTable("HighScore");
                });

            modelBuilder.Entity("FakeBet.Models.Match", b =>
                {
                    b.Property<Guid>("MatchId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Category");

                    b.Property<float>("PointsRatio");

                    b.Property<string>("TeamAName");

                    b.Property<int>("TeamAPoints");

                    b.Property<string>("TeamBName");

                    b.Property<int>("TeamBPoints");

                    b.HasKey("MatchId");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("FakeBet.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("NickName");

                    b.Property<string>("Password");

                    b.Property<int>("Points");

                    b.Property<string>("Salt");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FakeBet.Models.Vote", b =>
                {
                    b.Property<Guid>("VoteId")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("MatchId");

                    b.Property<Guid>("UserId");

                    b.Property<int>("UserPick");

                    b.Property<int>("UserPoints");

                    b.HasKey("VoteId");

                    b.HasIndex("MatchId");

                    b.HasIndex("UserId");

                    b.ToTable("Votes");
                });

            modelBuilder.Entity("FakeBet.Models.Vote", b =>
                {
                    b.HasOne("FakeBet.Models.Match")
                        .WithMany("Votes")
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FakeBet.Models.User")
                        .WithMany("VotesHistory")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
